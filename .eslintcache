[{"E:\\Documents\\product-management\\src\\index.js":"1","E:\\Documents\\product-management\\src\\App.js":"2","E:\\Documents\\product-management\\src\\reportWebVitals.js":"3","E:\\Documents\\product-management\\src\\components\\AddProduct.js":"4","E:\\Documents\\product-management\\src\\components\\Home.js":"5","E:\\Documents\\product-management\\src\\components\\EditProduct.js":"6","E:\\Documents\\product-management\\src\\context\\GlobalState.js":"7","E:\\Documents\\product-management\\src\\context\\AppReducer.js":"8","E:\\Documents\\product-management\\src\\components\\Products.js":"9"},{"size":410,"mtime":1611836669661,"results":"10","hashOfConfig":"11"},{"size":858,"mtime":1611898137509,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3375,"mtime":1611904957734,"results":"14","hashOfConfig":"11"},{"size":760,"mtime":1611903876554,"results":"15","hashOfConfig":"11"},{"size":4358,"mtime":1611905414915,"results":"16","hashOfConfig":"11"},{"size":1277,"mtime":1611828074389,"results":"17","hashOfConfig":"11"},{"size":898,"mtime":1611826898770,"results":"18","hashOfConfig":"11"},{"size":4511,"mtime":1611906505763,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1evqte9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Documents\\product-management\\src\\index.js",[],["42","43"],"E:\\Documents\\product-management\\src\\App.js",[],"E:\\Documents\\product-management\\src\\reportWebVitals.js",[],["44","45"],"E:\\Documents\\product-management\\src\\components\\AddProduct.js",["46"],"E:\\Documents\\product-management\\src\\components\\Home.js",["47","48","49"],"E:\\Documents\\product-management\\src\\components\\EditProduct.js",["50","51","52"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {ProductList} from './Products';\r\nimport { Container, Row, Col, Table, FormGroup, Input, Form, Button, Label } from 'reactstrap';\r\n\r\nexport const EditProduct = (props) => {\r\n    const [selectedProduct, setSelectedProduct] = useState({\r\n        id: '',\r\n        date: '',\r\n        name: '',\r\n        description: '',\r\n        imageUrl: '',\r\n        featured: ''\r\n    });\r\n    \r\n    let today = new Date();\r\n    let date = parseInt(today.getMonth()+1) + \"/\"+ today.getDate() +\"/\"+today.getFullYear();\r\n    \r\n    const {products, editProduct} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    // const currentId = props.match.params.id;\r\n    const currentId = window.location.pathname.split(\"/\").pop()\r\n    \r\n    useEffect(() => {\r\n        const productId = currentId;\r\n        const selectedProduct = products.find(product => product.id === productId);\r\n        setSelectedProduct(selectedProduct);\r\n    }, [currentId, products])\r\n    \r\n    const submitForm = () => {\r\n        editProduct(selectedProduct)\r\n        history.push('/add-product');\r\n    }\r\n    \r\n    let checked = '';\r\n    \r\n    if(selectedProduct.featured == 'featured'){\r\n        checked = 'checked';\r\n    }else{\r\n        checked = '';\r\n    }\r\n    \r\n    const enterName = (event) => {\r\n        setSelectedProduct({...selectedProduct, [event.target.name]: event.target.value})\r\n    }\r\n    \r\n    const enterDescription = (event) => {\r\n        setSelectedProduct({...selectedProduct, [event.target.name]: event.target.value})\r\n    }\r\n    \r\n    const enterImage = (event) => {\r\n        setSelectedProduct({...selectedProduct, [event.target.name]: event.target.value})\r\n    }\r\n    \r\n    const enterFeatured = (event) => {\r\n        if(event.target.checked){\r\n            setSelectedProduct({...selectedProduct, [event.target.name]: \"featured\"})\r\n        }else{\r\n            setSelectedProduct({...selectedProduct, [event.target.name]: \"\"})\r\n        }\r\n    }\r\n  \r\n    return(\r\n        <Container fluid={true} className=\"\">\r\n            <Row>\r\n                <Col xs={12} md={3} className=\"p-0\">\r\n                    <div className=\"sideForm edit p-5\">\r\n                        <h2>EDIT PRODUCT</h2>\r\n                        <Form onSubmit={submitForm} className=\"row mt-3\">\r\n                            <FormGroup className=\"col-12 px-1\">\r\n                                <Label>Product Name</Label>\r\n                                <Input type=\"text\" name=\"name\" value={selectedProduct.name} onChange={enterName} placeholder=\"Product Name\" required/>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"col-12 px-1\">\r\n                                <Label>Image URL</Label>\r\n                                <Input type=\"text\" name=\"imageUrl\" value={selectedProduct.imageUrl} onChange={enterImage} placeholder=\"Image URL\" required/>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"col-12 px-1\">\r\n                                <Label>Description</Label>\r\n                                <Input type=\"text\" name=\"description\" value={selectedProduct.description} onChange={enterDescription} placeholder=\"Description\" required/>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"col-12 px-1\">\r\n                                <Input type=\"checkbox\" name=\"featured\" value={selectedProduct.featured} onChange={enterFeatured} className=\"ml-2\"checked={checked} />\r\n                                <p className=\"ml-5\">Featured</p>\r\n                            </FormGroup>\r\n                            <Button className=\"col-12 px-1 mb-3\">Submit</Button>\r\n                            <Link to=\"/add-product\" className=\"btn d-block w-100 btn-danger\">Cancel</Link>\r\n                        </Form>\r\n                        <Link to=\"/\" className=\"home-btn\">&#x2190; View Home</Link>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={12} md={9} className=\"p-0\">\r\n                    <div className=\"content p-5\">\r\n                        <ProductList />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","E:\\Documents\\product-management\\src\\context\\GlobalState.js",[],"E:\\Documents\\product-management\\src\\context\\AppReducer.js",["53","54"],"export default (state, action) => {\r\n    switch (action.type){\r\n        case 'ADD_PRODUCT':\r\n            return{\r\n                products: [action.payload, ...state.products]\r\n            }\r\n            \r\n        case 'EDIT_PRODUCT':\r\n            const updateProduct = action.payload;\r\n            \r\n            const updateProducts = state.products.map(product => {\r\n                if(product.id == updateProduct.id){\r\n                    return updateProduct;\r\n                }\r\n                return product;\r\n            })\r\n            \r\n            return{\r\n                products: updateProducts\r\n            }\r\n            \r\n        case 'REMOVE_PRODUCT':\r\n            return{\r\n                products: state.products.filter(product =>{\r\n                    return product.id !== action.payload\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","E:\\Documents\\product-management\\src\\components\\Products.js",["55","56","57","58","59","60","61","62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":5,"column":31,"nodeType":"72","messageId":"73","endLine":5,"endColumn":36},{"ruleId":"70","severity":1,"message":"74","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":19},{"ruleId":"70","severity":1,"message":"75","line":3,"column":21,"nodeType":"72","messageId":"73","endLine":3,"endColumn":24},{"ruleId":"70","severity":1,"message":"76","line":3,"column":26,"nodeType":"72","messageId":"73","endLine":3,"endColumn":29},{"ruleId":"70","severity":1,"message":"71","line":5,"column":31,"nodeType":"72","messageId":"73","endLine":5,"endColumn":36},{"ruleId":"70","severity":1,"message":"77","line":18,"column":9,"nodeType":"72","messageId":"73","endLine":18,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":38,"column":33,"nodeType":"80","messageId":"81","endLine":38,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":1,"column":1,"nodeType":"84","endLine":31,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":12,"column":31,"nodeType":"80","messageId":"81","endLine":12,"endColumn":33},{"ruleId":"70","severity":1,"message":"85","line":1,"column":38,"nodeType":"72","messageId":"73","endLine":1,"endColumn":47},{"ruleId":"70","severity":1,"message":"86","line":4,"column":33,"nodeType":"72","messageId":"73","endLine":4,"endColumn":48},{"ruleId":"70","severity":1,"message":"87","line":4,"column":70,"nodeType":"72","messageId":"73","endLine":4,"endColumn":85},{"ruleId":"70","severity":1,"message":"88","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":32,"column":31,"nodeType":"91","endLine":32,"endColumn":76},{"ruleId":"70","severity":1,"message":"92","line":49,"column":22,"nodeType":"72","messageId":"73","endLine":49,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":59,"column":31,"nodeType":"91","endLine":59,"endColumn":76},{"ruleId":"70","severity":1,"message":"92","line":79,"column":20,"nodeType":"72","messageId":"73","endLine":79,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":80,"column":74,"nodeType":"80","messageId":"81","endLine":80,"endColumn":76},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],["93"],["94"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'date' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'CarouselControl' is defined but never used.","'CarouselCaption' is defined but never used.","'styles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'deleteProduct' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]