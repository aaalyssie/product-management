[{"E:\\Documents\\product-management\\src\\index.js":"1","E:\\Documents\\product-management\\src\\App.js":"2","E:\\Documents\\product-management\\src\\reportWebVitals.js":"3","E:\\Documents\\product-management\\src\\components\\AddProduct.js":"4","E:\\Documents\\product-management\\src\\components\\Home.js":"5","E:\\Documents\\product-management\\src\\components\\EditProduct.js":"6","E:\\Documents\\product-management\\src\\context\\GlobalState.js":"7","E:\\Documents\\product-management\\src\\context\\AppReducer.js":"8","E:\\Documents\\product-management\\src\\components\\Products.js":"9"},{"size":410,"mtime":1611836669661,"results":"10","hashOfConfig":"11"},{"size":1494,"mtime":1612370574357,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3375,"mtime":1611904957734,"results":"14","hashOfConfig":"11"},{"size":760,"mtime":1611903876554,"results":"15","hashOfConfig":"11"},{"size":4358,"mtime":1611905414915,"results":"16","hashOfConfig":"11"},{"size":1277,"mtime":1611828074389,"results":"17","hashOfConfig":"11"},{"size":898,"mtime":1611826898770,"results":"18","hashOfConfig":"11"},{"size":4511,"mtime":1611906505763,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1evqte9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"E:\\Documents\\product-management\\src\\index.js",[],["45","46"],"E:\\Documents\\product-management\\src\\App.js",[],"E:\\Documents\\product-management\\src\\reportWebVitals.js",[],["47","48"],"E:\\Documents\\product-management\\src\\components\\AddProduct.js",["49"],"import React, {useState, useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\nimport {Link} from 'react-router-dom';\r\nimport {ProductList} from './Products';\r\nimport { Container, Row, Col, Table, FormGroup, Input, Form, Button, Label } from 'reactstrap';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nexport const AddProduct = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [imageUrl, setImage] = useState('');\r\n    const [featured, setFeatured] = useState('');\r\n    \r\n    const {addProduct} = useContext(GlobalContext);\r\n    const submitForm = () => {\r\n        const newProduct = {\r\n            id: uuid(),\r\n            date: date,\r\n            name,\r\n            description,\r\n            imageUrl,\r\n            featured\r\n        }\r\n        addProduct(newProduct);\r\n    }\r\n    \r\n    let today = new Date();\r\n    let date = parseInt(today.getMonth()+1) + \"/\"+ today.getDate() +\"/\"+today.getFullYear();\r\n\r\n\r\n    const enterName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    \r\n    const enterDescription = (event) => {\r\n        setDescription(event.target.value);\r\n    }\r\n    \r\n    const enterImage = (event) => {\r\n        setImage(event.target.value);\r\n    }\r\n    \r\n    const enterFeatured = (event) => {\r\n        if(event.target.checked){\r\n            setFeatured(\"featured\");\r\n        }else{\r\n            setFeatured(\"\");\r\n        }\r\n    }\r\n    \r\n    return(\r\n      <Container fluid={true} className=\"\">\r\n          <Row>\r\n              <Col xs={12} md={3} className=\"p-0\">\r\n                  <div className=\"sideForm add p-5\">\r\n                      <h2>ADD PRODUCT</h2>\r\n                      <Form onSubmit={submitForm} className=\"row mt-3\">\r\n                          <FormGroup className=\"col-12 px-1\">\r\n                              <Label>Product Name</Label>\r\n                              <Input type=\"text\" value={name} onChange={enterName} placeholder=\"Product Name\" required/>\r\n                          </FormGroup>\r\n                          <FormGroup className=\"col-12 px-1\">\r\n                              <Label>Image URL</Label>\r\n                              <Input type=\"text\" value={imageUrl} onChange={enterImage} placeholder=\"Image URL\" required/>\r\n                          </FormGroup>\r\n                          <FormGroup className=\"col-12 px-1\">\r\n                              <Label>Description</Label>\r\n                              <Input type=\"text\" value={description} onChange={enterDescription} placeholder=\"Description\" required/>\r\n                          </FormGroup>\r\n                          <FormGroup className=\"col-12 px-1\">\r\n                              <Input type=\"checkbox\" value={featured} onChange={enterFeatured} className=\"ml-2\"/>\r\n                              <p className=\"label\">Featured</p>\r\n                          </FormGroup>\r\n                          <Button className=\"col-12 px-1\">Submit</Button>\r\n                      </Form>\r\n                      <Link to=\"/\" className=\"home-btn\">&#x2190; View Home</Link>\r\n                  </div>\r\n              </Col>\r\n              <Col xs={12} md={9} className=\"p-0\">\r\n                  <div className=\"content p-5\">\r\n                      <ProductList />\r\n                  </div>\r\n              </Col>\r\n          </Row>\r\n      </Container>\r\n    )\r\n}","E:\\Documents\\product-management\\src\\components\\Home.js",["50","51","52"],"import React from 'react';\r\nimport {ProductCatalog, FeaturedProducts} from './Products';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Home = () => {\r\n    return(\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n              <div className=\"container collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                  <li className=\"nav-item\">\r\n                      <Link to=\"/add-product\" className=\"nav-link\">Manage Products</Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n            <FeaturedProducts />\r\n            <ProductCatalog />\r\n        </div>\r\n    )\r\n}","E:\\Documents\\product-management\\src\\components\\EditProduct.js",["53","54","55"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {ProductList} from './Products';\r\nimport { Container, Row, Col, Table, FormGroup, Input, Form, Button, Label } from 'reactstrap';\r\n\r\nexport const EditProduct = (props) => {\r\n    const [selectedProduct, setSelectedProduct] = useState({\r\n        id: '',\r\n        date: '',\r\n        name: '',\r\n        description: '',\r\n        imageUrl: '',\r\n        featured: ''\r\n    });\r\n    \r\n    let today = new Date();\r\n    let date = parseInt(today.getMonth()+1) + \"/\"+ today.getDate() +\"/\"+today.getFullYear();\r\n    \r\n    const {products, editProduct} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    // const currentId = props.match.params.id;\r\n    const currentId = window.location.pathname.split(\"/\").pop()\r\n    \r\n    useEffect(() => {\r\n        const productId = currentId;\r\n        const selectedProduct = products.find(product => product.id === productId);\r\n        setSelectedProduct(selectedProduct);\r\n    }, [currentId, products])\r\n    \r\n    const submitForm = () => {\r\n        editProduct(selectedProduct)\r\n        history.push('/add-product');\r\n    }\r\n    \r\n    let checked = '';\r\n    \r\n    if(selectedProduct.featured == 'featured'){\r\n        checked = 'checked';\r\n    }else{\r\n        checked = '';\r\n    }\r\n    \r\n    const enterName = (event) => {\r\n        setSelectedProduct({...selectedProduct, [event.target.name]: event.target.value})\r\n    }\r\n    \r\n    const enterDescription = (event) => {\r\n        setSelectedProduct({...selectedProduct, [event.target.name]: event.target.value})\r\n    }\r\n    \r\n    const enterImage = (event) => {\r\n        setSelectedProduct({...selectedProduct, [event.target.name]: event.target.value})\r\n    }\r\n    \r\n    const enterFeatured = (event) => {\r\n        if(event.target.checked){\r\n            setSelectedProduct({...selectedProduct, [event.target.name]: \"featured\"})\r\n        }else{\r\n            setSelectedProduct({...selectedProduct, [event.target.name]: \"\"})\r\n        }\r\n    }\r\n  \r\n    return(\r\n        <Container fluid={true} className=\"\">\r\n            <Row>\r\n                <Col xs={12} md={3} className=\"p-0\">\r\n                    <div className=\"sideForm edit p-5\">\r\n                        <h2>EDIT PRODUCT</h2>\r\n                        <Form onSubmit={submitForm} className=\"row mt-3\">\r\n                            <FormGroup className=\"col-12 px-1\">\r\n                                <Label>Product Name</Label>\r\n                                <Input type=\"text\" name=\"name\" value={selectedProduct.name} onChange={enterName} placeholder=\"Product Name\" required/>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"col-12 px-1\">\r\n                                <Label>Image URL</Label>\r\n                                <Input type=\"text\" name=\"imageUrl\" value={selectedProduct.imageUrl} onChange={enterImage} placeholder=\"Image URL\" required/>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"col-12 px-1\">\r\n                                <Label>Description</Label>\r\n                                <Input type=\"text\" name=\"description\" value={selectedProduct.description} onChange={enterDescription} placeholder=\"Description\" required/>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"col-12 px-1\">\r\n                                <Input type=\"checkbox\" name=\"featured\" value={selectedProduct.featured} onChange={enterFeatured} className=\"ml-2\"checked={checked} />\r\n                                <p className=\"ml-5\">Featured</p>\r\n                            </FormGroup>\r\n                            <Button className=\"col-12 px-1 mb-3\">Submit</Button>\r\n                            <Link to=\"/add-product\" className=\"btn d-block w-100 btn-danger\">Cancel</Link>\r\n                        </Form>\r\n                        <Link to=\"/\" className=\"home-btn\">&#x2190; View Home</Link>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={12} md={9} className=\"p-0\">\r\n                    <div className=\"content p-5\">\r\n                        <ProductList />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","E:\\Documents\\product-management\\src\\context\\GlobalState.js",[],"E:\\Documents\\product-management\\src\\context\\AppReducer.js",["56","57"],"export default (state, action) => {\r\n    switch (action.type){\r\n        case 'ADD_PRODUCT':\r\n            return{\r\n                products: [action.payload, ...state.products]\r\n            }\r\n            \r\n        case 'EDIT_PRODUCT':\r\n            const updateProduct = action.payload;\r\n            \r\n            const updateProducts = state.products.map(product => {\r\n                if(product.id == updateProduct.id){\r\n                    return updateProduct;\r\n                }\r\n                return product;\r\n            })\r\n            \r\n            return{\r\n                products: updateProducts\r\n            }\r\n            \r\n        case 'REMOVE_PRODUCT':\r\n            return{\r\n                products: state.products.filter(product =>{\r\n                    return product.id !== action.payload\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","E:\\Documents\\product-management\\src\\components\\Products.js",["58","59","60","61","62","63","64","65","66"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\nimport {Link} from 'react-router-dom';\r\nimport {Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption, Container, Row, Col, Table  } from 'reactstrap';\r\nimport styles from '../App.css';\r\n\r\nexport const ProductList = (props) => {\r\n    const {products, deleteProduct} = useContext(GlobalContext);\r\n    return(\r\n      <div className=\"px-5\">\r\n          <h2>PRODUCT LIST</h2>\r\n          <Table className=\"productTable mt-5\">\r\n              <thead>\r\n                  <tr>\r\n                      <th>Date</th>\r\n                      <th>Name</th>\r\n                      <th>Description</th>\r\n                      <th>Image</th>\r\n                      <th>Featured</th>\r\n                      <th>Edit</th>\r\n                      <th>Delete</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n              {products.length > 0 ? (\r\n                  <>\r\n                  {products.map(product =>(\r\n                      <tr key={product.id}>\r\n                          <td>{product.date}</td>\r\n                          <td>{product.name}</td>\r\n                          <td>{product.description}</td>\r\n                          <td><img src={product.imageUrl} className=\"img\"/></td>\r\n                          <td>{product.featured}</td>\r\n                          <td><Link to={`/edit-product/${product.id}`} className=\"btn btn-warning\">Edit</Link></td>\r\n                          <td><button onClick={() => deleteProduct(product.id)} className=\"btn btn-danger\">Delete</button></td>\r\n                      </tr>\r\n                  ))}\r\n                  </>\r\n              ) : (\r\n                  <tr><td colspan=\"5\"><h3>No Products</h3></td></tr>\r\n              )}\r\n              </tbody>\r\n          </Table>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport const ProductCatalog = (props) => {\r\n    const {products, deleteProduct} = useContext(GlobalContext);\r\n    return(\r\n      <Container className=\"pt-3 pb-5\">\r\n          <h2 className=\"text-center\">OUR PRODUCTS</h2>\r\n          <Row className=\"productCatalog\">\r\n              {products.length > 0 ? (\r\n                  <>\r\n                  {products.map(product =>(\r\n                      <Col xs={6} md={3} key={product.id}>\r\n                          <div className=\"item\">\r\n                              <img src={product.imageUrl} className=\"img\"/>\r\n                              <div className=\"details\">\r\n                                  <h3>{product.name}</h3>\r\n                                  <p>{product.description}</p>\r\n                              </div>\r\n                          </div>\r\n                      </Col>\r\n                  ))}\r\n                  </>\r\n              ) : (\r\n                  <h4 className=\"mt-5 w-100 text-center\">No Available Products</h4>\r\n              )}\r\n          </Row>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport const FeaturedProducts = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n  const {products, deleteProduct} = useContext(GlobalContext);\r\n  const featuredProducts = products.filter(producto => producto.featured == \"featured\")\r\n  \r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === featuredProducts.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? featuredProducts.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n  \r\n  const slides = featuredProducts.map(item => {\r\n      return (\r\n        <CarouselItem onExiting={() => setAnimating(true)} onExited={() => setAnimating(false)} key={item.imageUrl}>\r\n          <img src={item.imageUrl} alt={item.name} />\r\n        </CarouselItem>\r\n      );  \r\n  \r\n  });\r\n  return (\r\n      <div>\r\n          {featuredProducts.length > 0 ? (\r\n            <Container className=\"py-5\">\r\n                  <Carousel activeIndex={activeIndex} next={next} previous={previous} ride>\r\n                  <CarouselIndicators items={featuredProducts} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n                  {slides}\r\n                </Carousel>\r\n            </Container>\r\n          ) : (\r\n            null\r\n          )}\r\n      </div>\r\n  );\r\n}\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":5,"column":31,"nodeType":"75","messageId":"76","endLine":5,"endColumn":36},{"ruleId":"73","severity":1,"message":"77","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":19},{"ruleId":"73","severity":1,"message":"78","line":3,"column":21,"nodeType":"75","messageId":"76","endLine":3,"endColumn":24},{"ruleId":"73","severity":1,"message":"79","line":3,"column":26,"nodeType":"75","messageId":"76","endLine":3,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":5,"column":31,"nodeType":"75","messageId":"76","endLine":5,"endColumn":36},{"ruleId":"73","severity":1,"message":"80","line":18,"column":9,"nodeType":"75","messageId":"76","endLine":18,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":38,"column":33,"nodeType":"83","messageId":"84","endLine":38,"endColumn":35},{"ruleId":"85","severity":1,"message":"86","line":1,"column":1,"nodeType":"87","endLine":31,"endColumn":2},{"ruleId":"81","severity":1,"message":"82","line":12,"column":31,"nodeType":"83","messageId":"84","endLine":12,"endColumn":33},{"ruleId":"73","severity":1,"message":"88","line":1,"column":38,"nodeType":"75","messageId":"76","endLine":1,"endColumn":47},{"ruleId":"73","severity":1,"message":"89","line":4,"column":33,"nodeType":"75","messageId":"76","endLine":4,"endColumn":48},{"ruleId":"73","severity":1,"message":"90","line":4,"column":70,"nodeType":"75","messageId":"76","endLine":4,"endColumn":85},{"ruleId":"73","severity":1,"message":"91","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":32,"column":31,"nodeType":"94","endLine":32,"endColumn":76},{"ruleId":"73","severity":1,"message":"95","line":49,"column":22,"nodeType":"75","messageId":"76","endLine":49,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":59,"column":31,"nodeType":"94","endLine":59,"endColumn":76},{"ruleId":"73","severity":1,"message":"95","line":79,"column":20,"nodeType":"75","messageId":"76","endLine":79,"endColumn":33},{"ruleId":"81","severity":1,"message":"82","line":80,"column":74,"nodeType":"83","messageId":"84","endLine":80,"endColumn":76},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'date' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'CarouselControl' is defined but never used.","'CarouselCaption' is defined but never used.","'styles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'deleteProduct' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]